
// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–∏–π –º–µ–∂–¥—É –æ–±—ã—á–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏

const obj = {
  name: 'John',
  age: 30,
  
  // –û–±—ã—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –∏–º–µ–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π this
  testFunction: function() {
    console.log('üîµ –û–±—ã—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è:');
    console.log('this =', this); // —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ obj
    console.log('this.name =', this.name); // 'John'
    console.log('this.age =', this.age); // 30
    
    // –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –í–ù–£–¢–†–ò –æ–±—ã—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    const arrowFunction = () => {
      console.log('üü¢ –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è –≤–Ω—É—Ç—Ä–∏ –æ–±—ã—á–Ω–æ–π:');
      console.log('this =', this); // –Ω–∞—Å–ª–µ–¥—É–µ—Ç this –æ—Ç testFunction (obj)
      console.log('this.name =', this.name); // 'John'
      console.log('this.age =', this.age); // 30
    }
    arrowFunction();
  },
  
  // –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –ù–ï –∏–º–µ–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ this
  arrowTestFunction: () => {
    console.log('üî¥ –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è:');
    console.log('this =', this); // —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ window/global
    console.log('this.name =', this.name); // undefined
    console.log('this.age =', this.age); // undefined
  },
  
  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º this –¥–ª—è —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
  correctArrowFunction: function() {
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–µ–ª–æ—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Å–ª–µ–¥—É–µ—Ç this –æ—Ç –æ–±—ã—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    return () => {
      console.log('üü° –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è:');
      console.log('this.name =', this.name); // 'John'
      console.log('this.age =', this.age); // 30
    }
  }
}

console.log('=== –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–ó–õ–ò–ß–ò–ô THIS ===');
obj.testFunction();
console.log('---');
obj.arrowTestFunction();
console.log('---');
const correctArrow = obj.correctArrowFunction();
correctArrow();

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
console.log('\n=== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–†–ò–ú–ï–†–´ ===');

// –ü—Ä–∏–º–µ—Ä —Å bind()
const boundFunction = obj.arrowTestFunction.bind(obj);
console.log('üü† –ü–æ–ø—ã—Ç–∫–∞ bind() —Å–æ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π:');
boundFunction(); // bind –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏!

// –ü—Ä–∏–º–µ—Ä —Å call()
console.log('üü† –ü–æ–ø—ã—Ç–∫–∞ call() —Å–æ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π:');
obj.arrowTestFunction.call(obj); // call –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏!

// –¢–µ—Å—Ç—ã –¥–ª—è Promise.all –∏ Promise.race –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ñ–∞–π–ª–µ promises-test.js
